positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker logs
  - job_name: docker-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker-logs
          __path__: /var/lib/docker/containers/*/*-json.log
    pipeline_stages:
      - json:
          expressions:
            stream: stream
            attrs: attrs
            tag: attrs.tag
            time: time
      - labels:
          stream:
          tag:
      - timestamp:
          source: time
          format: RFC3339Nano
      - output:
          source: log

  # Uncompressed system logs
  - job_name: system-uncompressed
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-logs
          __path__: /var/log/*.log
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2})\s+(?P<hostname>\S+)\s+(?P<service>\S+)\[(?P<pid>\d+)\]:\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: "Jan 2 15:04:05"
      - labels:
          service:
          hostname:

  # Compressed system logs
  - job_name: system-compressed
    decompression:
      enabled: true
      initial_delay: 10s
      format: gz
    static_configs:
      - targets:
          - localhost
        labels:
          job: system-logs
          __path__: /var/log/**.gz
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2})\s+(?P<hostname>\S+)\s+(?P<service>\S+)\[(?P<pid>\d+)\]:\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: "Jan 2 15:04:05"
      - labels:
          service:
          hostname:
