#
# Network definitions
#
networks:
  ncp:
    name: epps

volumes:
  db-data:
  tsam-exporter-data:
    name: tsam-exporter-data

secrets:
  db_username:
    file: db_username.txt
  db_password:
    file: db_password.txt
  db_root_password:
    file: db_root_password.txt
  cts_password:
    file: cts_password.txt
  cts_username:
    file: cts_username.txt
  tls_keystore_password:
    file: tls_keystore_password.txt
  seal_keystore_password:
    file: seal_keystore_password.txt
  tls_truststore_password:
    file: tls_truststore_password.txt

services:
  mysql:
    container_name: openncp_db
    hostname: ${DB_HOST}
    image: mysql:latest
    ports:
      - ${DB_EXPOSED_PORT}:${DB_INTERNAL_PORT}
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql/initdb:/docker-entrypoint-initdb.d
      - ./mysql/custom.cnf:/etc/mysql/conf.d/custom.cnf:ro
    environment:
      MYSQL_ROOT_USER: ${DB_ROOT_USER}
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_USER_FILE: /run/secrets/db_username
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_ROOT_USER}", "--password=$$(cat $$MYSQL_ROOT_PASSWORD_FILE)" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ncp
    secrets:
      - db_username
      - db_password
      - db_root_password

  openncp-tsam-exporter:
    container_name: "openncp-tsam-exporter"
    env_file: .env
    environment:
      DB_HOST: ${DB_HOST}
      DB_INTERNAL_PORT: ${DB_INTERNAL_PORT}
      DB_USER_FILE: /run/secrets/db_username
      DRIVER_CLASS_NAME: ${DRIVER_CLASS_NAME}
      DB_PASSWORD_FILE: /run/secrets/db_password
      DB_ACTIVE_PROFILE: ${DB_ACTIVE_PROFILE}
    build:
      context: .
      dockerfile: Dockerfile
      target: tsam-exporter
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - tsam-exporter-data:/opt/openncp-configuration/EpsosRepository
    networks:
      - ncp
    secrets:
      - db_username
      - db_password

  tomcat_node_a:
    build:
      context: .
      dockerfile: Dockerfile
      target: node-a
    container_name: "openncp-server"
    env_file:
      - ./ncp_a/ncpa.database.env
      - ./ncp_a/ncpa.env
    ports:
      - "${NCP_A_SERVER_CONNECTOR_PORT}:${NCP_A_SERVER_CONNECTOR_PORT}"
      - "${NCP_A_SERVER_CONNECTOR_SECURE_PORT}:${NCP_A_SERVER_CONNECTOR_SECURE_PORT}"
      - 5006:5006
    depends_on:
      mysql:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      CATALINA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8
        -Xdebug -agentlib:jdwp=transport=dt_socket,address=0.0.0.0:5006,server=y,suspend=n"
      JAVA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8"
      LOGGING_LEVEL_ROOT: DEBUG
    networks:
      - ncp
    secrets:
      - tls_keystore_password
      - tls_truststore_password
      - db_username
      - db_password

  tomcat_node_b:
    build:
      context: .
      dockerfile: Dockerfile
      target: node-b
    container_name: "openncp-client"
    env_file:
      - ./ncp_b/ncpb.database.env
      - ./ncp_b/ncpb.env
    ports:
      - "${NCP_B_SERVER_CONNECTOR_PORT}:${NCP_B_SERVER_CONNECTOR_PORT}"
      - "${NCP_B_SERVER_CONNECTOR_SECURE_PORT}:${NCP_B_SERVER_CONNECTOR_SECURE_PORT}"
      - 5005:5005
    extra_hosts:
      - "host.docker.internal:host-gateway"
    dns:
      - 8.8.8.8
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      CATALINA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8
        -Xdebug -agentlib:jdwp=transport=dt_socket,address=0.0.0.0:5005,server=y,suspend=n"
      JAVA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8"
      LOGGING_LEVEL_ROOT: DEBUG
    networks:
      - ncp
    secrets:
      - tls_keystore_password
      - tls_truststore_password
      - db_username
      - db_password

  openncp-openatna:
    container_name: openncp-openatna
    build:
      context: .
      dockerfile: Dockerfile
      target: openatna
    env_file:
      - ./openncp-openatna/openatna.database.env
      - ./openncp-openatna/openatna.env
    ports:
      - "${NCP_OPENATNA_CONNECTOR_PORT}:${NCP_OPENATNA_CONNECTOR_PORT}"
      - "${NCP_OPENATNA_CONNECTOR_SECURE_PORT}:${NCP_OPENATNA_CONNECTOR_SECURE_PORT}"
      - "2861:2861/udp"
      - "2862:2862"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      CATALINA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8"
      JAVA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8"
      LOGGING_LEVEL_ROOT: DEBUG
    networks:
      - ncp
    secrets:
      - tls_keystore_password
      - tls_truststore_password
      - db_username
      - db_password

  openncp-trc-sts:
    container_name: openncp-trc-sts
    build:
      context: .
      dockerfile: Dockerfile
      target: trc-sts
    env_file:
      - ./openncp-trc-sts/.database.env
      - ./openncp-trc-sts/.env
    ports:
      - "${NCP_TRC_STS_CONNECTOR_PORT}:${NCP_TRC_STS_CONNECTOR_PORT}"
      - "${NCP_TRC_STS_CONNECTOR_SECURE_PORT}:${NCP_TRC_STS_CONNECTOR_SECURE_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      CATALINA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8"
      JAVA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8
        -Dorg.apache.cxf.stax.allowInsecureParser=true"
      LOGGING_LEVEL_ROOT: DEBUG
    networks:
      - ncp
    secrets:
      - tls_keystore_password
      - tls_truststore_password
      - db_username
      - db_password

  openncp-translations-and-mappings:
    container_name: openncp-translations-and-mappings
    build:
      context: .
      dockerfile: Dockerfile
      target: translations-and-mappings
    env_file:
      - ./openncp-translations-and-mappings/translations-and-mappings.database.env
      - ./openncp-translations-and-mappings/translations-and-mappings.env
    ports:
      - "${NCP_TRANSLATIONS_MAPPINGS_CONNECTOR_PORT}:${NCP_TRANSLATIONS_MAPPINGS_CONNECTOR_PORT}"
      - "${NCP_TRANSLATIONS_MAPPINGS_CONNECTOR_SECURE_PORT}:${NCP_TRANSLATIONS_MAPPINGS_CONNECTOR_SECURE_PORT}"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      CATALINA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8"
      JAVA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8"
      LOGGING_LEVEL_ROOT: DEBUG
    networks:
      - ncp
    secrets:
      - tls_keystore_password
      - tls_truststore_password
      - db_username
      - db_password

  openncp-web-manager-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: web-manager-backend
    env_file:
      - ./openncp-web-manager/openncp-web-manager-backend/.database.env
      - ./openncp-web-manager/openncp-web-manager-backend/.env
    ports:
      - "${NCP_WEB_MANAGER_BACKEND_CONNECTOR_PORT}:${NCP_WEB_MANAGER_BACKEND_CONNECTOR_PORT}"
      - "${NCP_WEB_MANAGER_BACKEND_CONNECTOR_SECURE_PORT}:${NCP_WEB_MANAGER_BACKEND_CONNECTOR_SECURE_PORT}"
      - "8000:8000"
      - "5002:5002"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    dns:
      - 8.8.8.8
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: production
      SPRING_CONFIG_ADDITIONAL-LOCATION: file:/opt/config/application-docker.yml
      CATALINA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8
        -Xdebug -agentlib:jdwp=transport=dt_socket,address=0.0.0.0:5002,server=y,suspend=n"
      JAVA_OPTS: "
        -DopenATNA.properties.path=file:/opt/atna-resources/openatna.properties
        -Dfile.encoding=UTF-8"
      LOGGING_LEVEL_ROOT: DEBUG
    networks:
      - ncp
    secrets:
      - tls_keystore_password
      - tls_truststore_password
      - db_username
      - db_password

  openncp-web-manager-frontend:
    depends_on:
      openncp-web-manager-backend:
        condition: service_started
    build:
      context: .
      dockerfile: Dockerfile
      target: web-manager-frontend
      args:
        GATEWAY_BACKEND_URL: ${GATEWAY_BACKEND_URL}
    ports:
      - "${NCP_WEB_MANAGER_FRONTEND_CONNECTOR_PORT}:8080"
    networks:
      - ncp

  configuration-synchronizer:
    build:
      context: configuration-synchronizer
      platforms:
        - "linux/amd64"
        - "linux/arm64"
    container_name: configuration-synchronizer
    env_file:
      - .env
    volumes:
      - ./openncp-configuration/openncp-configuration.properties:/opt/openncp-configuration/openncp-configuration.properties
    environment:
      OPENNCP_CONFIGURATION_FILE: /opt/openncp-configuration/openncp-configuration.properties
      MARIADB_HOST: ${DB_HOST}
      MARIADB_PORT: ${DB_INTERNAL_PORT}
      MARIADB_PASSWORD_FILE: /run/secrets/db_password
      MARIADB_USERNAME_FILE: /run/secrets/db_username
      TLS_KEYSTORE_PASSWORD_FILE: /run/secrets/tls_keystore_password
      SEAL_KEYSTORE_PASSWORD_FILE: /run/secrets/seal_keystore_password
      TLS_TRUSTSTORE_PASSWORD_FILE: /run/secrets/tls_truststore_password
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ncp
    secrets:
      - db_username
      - db_password
      - tls_keystore_password
      - seal_keystore_password
      - tls_truststore_password
