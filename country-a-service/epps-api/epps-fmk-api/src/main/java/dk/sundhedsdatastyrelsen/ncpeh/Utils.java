package dk.sundhedsdatastyrelsen.ncpeh; import org.w3c.dom.Document; import org.w3c.dom.Element; import org.xml.sax.SAXException; import javax.xml.parsers.DocumentBuilderFactory; import javax.xml.parsers.ParserConfigurationException; import java.io.ByteArrayInputStream; import java.io.IOException; import java.io.InputStream; import java.nio.charset.StandardCharsets; import java.util.function.Consumer; public final class Utils { private Utils() { } public static <T> T apply(T value, Consumer<T> initializer) { initializer.accept(value); return value; } public static InputStream resourceAsStream(String name) { return Utils.class.getClassLoader().getResourceAsStream(name); } public static Document readXmlDocument(InputStream xml) throws SAXException, IOException { var dbf = DocumentBuilderFactory.newDefaultNSInstance(); try (xml) { var db = dbf.newDocumentBuilder(); return db.parse(xml); } catch (ParserConfigurationException e) { throw new IllegalStateException("Could not create XML parser", e); } } public static Element readXml(InputStream xml) throws IOException, SAXException { return readXmlDocument(xml).getDocumentElement(); } public static Document readXmlDocument(String xml) throws SAXException { try { return readXmlDocument(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8))); } catch (IOException e) { throw new RuntimeException(e); } } public static Element readXml(String xml) throws SAXException { try { return readXml(new ByteArrayInputStream(xml.getBytes(StandardCharsets.UTF_8))); } catch (IOException e) { throw new RuntimeException(e); } } } 